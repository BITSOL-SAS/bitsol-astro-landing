---
import 'swiper/css';
import 'swiper/css/navigation';
import 'swiper/css/pagination';
import 'swiper/css/effect-coverflow';

export interface Props {
  slides: {
    image: string;
    caption: string;
  }[];
}

const { slides } = Astro.props;
---

<style>
  .carousel-wrapper {
    width: 100%;
    padding: 2rem 0;
  }

  .swiper-container {
    width: 100%;
    height: 70vh;
    padding: 2rem 0;
  }

  .swiper-slide {
    background-position: center;
    background-size: cover;
    width: 90%; 
    display: flex;
    align-items: center;
    justify-content: center;
    transform-style: preserve-3d;
  }

  .swiper-slide img {
    display: block;
    max-width: 100%;
    max-height: 100%;
    width: auto;
    height: auto;
    border-radius: 12px;
    box-shadow: 0 20px 50px rgba(0,0,0,0.4);
    -webkit-box-reflect: below 1px linear-gradient(transparent 70%, rgba(0,0,0,0.15));
  }

  .controls-container {
    text-align: center;
    margin-top: -1rem; 
  }

  .active-caption {
    font-family: 'Bitter', serif;
    font-size: 1rem;
    color: #eaeaea;
    opacity: 0.9;
    max-width: 650px;
    margin: 0 auto 1.5rem auto;
    line-height: 1.6;
    min-height: 48px;
  }

  .swiper-controls-bar {
    display: inline-flex;
    align-items: center;
    gap: 1rem;
    background-color: #1a1a1a;
    padding: 12px 20px;
    border-radius: 15px;
    border: 1px solid rgba(255, 255, 255, 0.08);
  }

  .swiper-button-next,
  .swiper-button-prev {
    position: static;
    width: 36px;
    height: 36px;
    margin: 0;
    color: #fff;
    background: transparent;
  }
  
  .swiper-button-next::after,
  .swiper-button-prev::after {
    font-size: 16px;
    font-weight: 900;
  }

  .swiper-pagination {
    position: static;
    width: auto;
    display: flex;
    gap: 10px;
  }

  .swiper-pagination-bullet {
    width: 9px;
    height: 9px;
    background-color: #4d4d4d;
    opacity: 1;
    transition: background-color 0.3s ease;
  }

  .swiper-pagination-bullet-active {
    background-color: #fff;
  }

  @media (max-width: 768px) {
    .swiper-slide {
      width: 75%;
    }
    .active-caption {
      font-size: 0.9rem;
      min-height: 40px;
    }
    .swiper-container {
      height: 60vh;
    }
  }
</style>

<div class="carousel-wrapper">
  <div class="swiper-container">
    <div class="swiper-wrapper">
      {slides.map(slide => (
        <div class="swiper-slide">
          <img src={slide.image} alt={slide.caption} />
        </div>
      ))}
    </div>
  </div>

  <div class="controls-container">
    <p id="active-caption" class="active-caption">{slides[0]?.caption || ''}</p>
    <div class="swiper-controls-bar">
      <div class="swiper-button-prev"></div>
      <div class="swiper-pagination"></div>
      <div class="swiper-button-next"></div>
    </div>
  </div>
</div>

<script id="slides-data" type="application/json" is:inline set:html={JSON.stringify(slides)}></script>

<script>
  import Swiper from 'swiper';
  import { Navigation, Pagination, EffectCoverflow } from 'swiper/modules';

  document.addEventListener('DOMContentLoaded', () => {
    const slidesDataEl = document.getElementById('slides-data');
    const slides = slidesDataEl ? JSON.parse(slidesDataEl.textContent || '[]') : [];
    const captionElement = document.getElementById('active-caption');

    const swiper = new Swiper('.swiper-container', {
      modules: [Navigation, Pagination, EffectCoverflow],
      effect: 'coverflow',
      grabCursor: true,
      centeredSlides: true,
      slidesPerView: 'auto',
      loop: true,
      coverflowEffect: {
        rotate: 30,
        stretch: 0,
        depth: 150,
        modifier: 1,
        slideShadows: false,
      },
      pagination: {
        el: '.swiper-pagination',
        clickable: true,
      },
      navigation: {
        nextEl: '.swiper-button-next',
        prevEl: '.swiper-button-prev',
      },
      on: {
        slideChange: function () {
          // @ts-ignore
          if (captionElement && slides[this.realIndex]) {
            // @ts-ignore
            captionElement.textContent = slides[this.realIndex].caption;
          }
        },
      },
    });
  });
</script> 